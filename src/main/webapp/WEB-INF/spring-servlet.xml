<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="org.testingframework.selenium.web" />

	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- <property name="ignoreResourceNotFound" value="true" /> -->
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />

		<property name="locations">
			<list>
				<value>file:${TEST_CONFIG_FILE}</value>
			</list>
		</property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>WEB-INF/message</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Enable annotation style of managing transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<property name="maxUploadSize" value="100000" />

	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>

		<property name="mappingResources">
			<list>
				<value>user.hbm.xml</value>
				<value>user-usecase.hbm.xml</value>
				<value>user-testsuite.hbm.xml</value>
				<value>module.hbm.xml</value>
				<value>usecase.hbm.xml</value>
				<value>usecase-cls.hbm.xml</value>
				<value>testcase.hbm.xml</value>
				<value>tcrun-hdr.hbm.xml</value>
				<value>tcrun-dtl.hbm.xml</value>
				<value>testsuite-hdr.hbm.xml</value>
				<value>testsuite-dtl.hbm.xml</value>
				<value>tcrun-file.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.show_sql">true</prop>

			</props>
		</property>
	</bean>

	<bean id="userDao" class="org.testingframework.selenium.dao.UserDao">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<bean id="moduleDao" class="org.testingframework.selenium.dao.ModuleDao">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<bean id="useCaseDao" class="org.testingframework.selenium.dao.UseCaseDao">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<bean id="testCaseDao" class="org.testingframework.selenium.dao.TestCaseDao">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<bean id="testSuiteDao" class="org.testingframework.selenium.dao.TestSuiteDao">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<bean id="runTestDao" class="org.testingframework.selenium.dao.RunTestDao">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>

	<bean id="userService" class="org.testingframework.selenium.service.UserService">
		<property name="userDao" ref="userDao" />
		<property name="useCaseDao" ref="useCaseDao" />
		<property name="testSuiteDao" ref="testSuiteDao" />
	</bean>
	<bean id="moduleService" class="org.testingframework.selenium.service.ModuleService">
		<property name="moduleDao" ref="moduleDao" />
	</bean>

	<bean id="useCaseService" class="org.testingframework.selenium.service.UseCaseService">
		<property name="useCaseDao" ref="useCaseDao" />
	</bean>

	<bean id="testCaseService" class="org.testingframework.selenium.service.TestCaseService">
		<property name="testCaseDao" ref="testCaseDao" />
	</bean>
	<bean id="testSuiteService" class="org.testingframework.selenium.service.TestSuiteService">
		<property name="testSuiteDao" ref="testSuiteDao" />
	</bean>
	<bean id="runTestService" class="org.testingframework.selenium.service.RunTestService">
		<property name="runTestDao" ref="runTestDao" />
	</bean>
	<!-- <context:property-placeholder location="jdbc.properties" /> -->
</beans>